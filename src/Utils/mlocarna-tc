#!/usr/bin/env perl

## multiple alignment using t-coffee

use warnings;
use strict;

use FindBin;
use lib "$FindBin::Bin/../lib/perl";

use MLocarna;

## ------------------------------------------------------------
# global options

my $tlibname="tcoffee.lib";

my $locarna_params="--struct-weight=150 -p0.001 -e0.001";

#
## ------------------------------------------------------------


## ----------------------------------------
# parse arguments

($#ARGV == 1) || die "USAGE: $0 <mfasta file> <tgtdir>\n";

my $mfasta_file=$ARGV[0];

my $tgtdir = $ARGV[1];

#
## ----------------------------------------



## --------------------------------------------------------------------------------
# main program

if (! -e $tgtdir) {
    mkdir $tgtdir || die "Cannot create $tgtdir";
} else {
    print STDERR "Warning: $tgtdir exists already.\n";
}

open(my $TLIB, ">", "$tgtdir/$tlibname");


## ------------------------------------------------------------
# parse mfasta

my %mfasta = parse_mfasta($mfasta_file);

my @names = keys %mfasta;

print $TLIB tcoffee_libheader(@names);

## ------------------------------------------------------------
# generate t-coffee lib

my $num=0;
my $total=($#names*($#names+1))/2;

for (my $i=0; $i<=$#names; $i++) {
    for (my $j=$i+1; $j<=$#names; $j++) {
	$num++;
	printf "$num/$total (%d-%d/%d)\n",$i+1,$j+1,$#names+1;
	
	my @alignment = compute_alignment($mfasta{$names[$i]},$mfasta{$names[$j]}, $locarna_params);
	
	my ($aliA,$aliB) = parse_alignment(@alignment);
	
	print STDERR @alignment;
		
	$alignment[0] =~ /Score: (.+)/; 
	my $score=$1;
	
	my $weight;
	$weight = sprintf "%d", $score;
		
	## write edges to t-coffee lib
	
	my $ip1=$i+1; my $jp1=$j+1;
	print $TLIB "#$ip1 $jp1\n";
	
	# print STDERR "$aliA\n";
	# print STDERR "$aliB\n";
	
	my $ia = 0;
	my $ib = 0;
	
	for (my $k=0; $k<length $aliA; $k++) {
	    
	    my $cA = substr $aliA,$k,1;
	    my $cB = substr $aliB,$k,1;
	    
	    if ( $cA =~ /^[ACTGU]$/ ) {
		$ia++;
	    }
	    if ( $cB =~ /^[ACTGU]$/ ) {
		$ib++;
	    }

	    if ( $cA =~ /^[ACTGU]$/ && $cB =~ /^[ACTGU]$/) {
		print $TLIB "$ia $ib $weight\n";
	    }

	}
    }
}

print $TLIB "! CPU 0\n";
print $TLIB "! SEQ_1_TO_N\n";

close $TLIB;

## ------------------------------------------------------------
# call t-coffee

system("cd $tgtdir; t_coffee $tlibname -in $tlibname");

my $talname=$tlibname;
$talname=~s/\.lib$/\.aln/;
system("cd $tgtdir; cat $talname | tr 'acgtu' 'ACGTU' > $talname.tmp; mv $talname.tmp $talname");

## -------------------


sub tcoffee_libheader {
    my @names=@_;

    my @header;

    my $num_seqs=$#names+1;
    
    for (my $i=0; $i<=$#names; $i++) {
	my $name=$names[$i];
	my $seq=$mfasta{$name};
	my $len = length $seq;
	push @header, "$name $len $seq\n";
    }
    

    @header=("! TC_LIB_FORMAT_01\n","$num_seqs\n",@header);
    
    return @header;
}
